{"ast":null,"code":"export const reducer = (state, action) => {\n  //   if (action.type === \"REMOVE_ITEM\") {\n  //     return {\n  //       ...state,\n  //       item: state.item.filter((curElem) => {\n  //         return curElem.id !== action.payload;\n  //       }),\n  //     };\n  //   }\n  if (action.type === \"REMOVE_CART\") {\n    return { ...state,\n      cart: state.cart1.filter(curElem => {\n        return curElem.id !== action.payload;\n      })\n    };\n  } //   if (action.type === \"CLEAR_CART\") {\n  //     return { ...state, item: [] };\n  //   }\n\n\n  if (action.type === \"ADD_TO_CART\") {\n    return { ...state,\n      cart: [...state.cart, { ...action.payload,\n        quantity: 1\n      }]\n    };\n  } //   if (action.type === \"INCREMENT\") {\n  //     const updatedCart = state.item.map((curElem) => {\n  //       if (curElem.id === action.payload) {\n  //         return { ...curElem, quantity: curElem.quantity + 1 };\n  //       }\n  //       return curElem;\n  //     });\n  //     return { ...state, item: updatedCart };\n  //   }\n  //   if (action.type === \"DECREMENT\") {\n  //     const updatedCart = state.item\n  //       .map((curElem) => {\n  //         if (curElem.id === action.payload) {\n  //           return { ...curElem, quantity: curElem.quantity - 1 };\n  //         }\n  //         return curElem;\n  //       })\n  //       .filter((curElem) => curElem.quantity !== 0);\n  //     return { ...state, item: updatedCart };\n  //   }\n  //   if (action.type === \"GET_TOTAL\") {\n  //     let { totalItem, totalAmount } = state.item.reduce(\n  //       (accum, curVal) => {\n  //         let { price, quantity } = curVal;\n  //         let updatedTotalAmount = price * quantity;\n  //         accum.totalAmount += updatedTotalAmount;\n  //         accum.totalItem += quantity;\n  //         return accum;\n  //       },\n  //       {\n  //         totalItem: 0,\n  //         totalAmount: 0,\n  //       }\n  //     );\n  //     return { ...state, totalItem, totalAmount };\n  //   }\n\n\n  return state;\n};","map":{"version":3,"sources":["C:/Users/Web-Design/Desktop/pizza/pizza-menu/src/context/reducer.js"],"names":["reducer","state","action","type","cart","cart1","filter","curElem","id","payload","quantity"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,WAAO,EACL,GAAGF,KADE;AAELG,MAAAA,IAAI,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACpC,eAAOA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACO,OAA7B;AACD,OAFK;AAFD,KAAP;AAMD,GAjBuC,CAmBxC;AACA;AACA;;;AAEA,MAAIP,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,WAAO,EACL,GAAGF,KADE;AAELG,MAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV,EAAgB,EAAE,GAAGF,MAAM,CAACO,OAAZ;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAAhB;AAFD,KAAP;AAID,GA5BuC,CA8BxC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAOT,KAAP;AACD,CAxEM","sourcesContent":["export const reducer = (state, action) => {\r\n  //   if (action.type === \"REMOVE_ITEM\") {\r\n  //     return {\r\n  //       ...state,\r\n  //       item: state.item.filter((curElem) => {\r\n  //         return curElem.id !== action.payload;\r\n  //       }),\r\n  //     };\r\n  //   }\r\n\r\n  if (action.type === \"REMOVE_CART\") {\r\n    return {\r\n      ...state,\r\n      cart: state.cart1.filter((curElem) => {\r\n        return curElem.id !== action.payload;\r\n      }),\r\n    };\r\n  }\r\n\r\n  //   if (action.type === \"CLEAR_CART\") {\r\n  //     return { ...state, item: [] };\r\n  //   }\r\n\r\n  if (action.type === \"ADD_TO_CART\") {\r\n    return {\r\n      ...state,\r\n      cart: [...state.cart, { ...action.payload, quantity: 1 }],\r\n    };\r\n  }\r\n\r\n  //   if (action.type === \"INCREMENT\") {\r\n  //     const updatedCart = state.item.map((curElem) => {\r\n  //       if (curElem.id === action.payload) {\r\n  //         return { ...curElem, quantity: curElem.quantity + 1 };\r\n  //       }\r\n  //       return curElem;\r\n  //     });\r\n\r\n  //     return { ...state, item: updatedCart };\r\n  //   }\r\n\r\n  //   if (action.type === \"DECREMENT\") {\r\n  //     const updatedCart = state.item\r\n  //       .map((curElem) => {\r\n  //         if (curElem.id === action.payload) {\r\n  //           return { ...curElem, quantity: curElem.quantity - 1 };\r\n  //         }\r\n  //         return curElem;\r\n  //       })\r\n  //       .filter((curElem) => curElem.quantity !== 0);\r\n  //     return { ...state, item: updatedCart };\r\n  //   }\r\n\r\n  //   if (action.type === \"GET_TOTAL\") {\r\n  //     let { totalItem, totalAmount } = state.item.reduce(\r\n  //       (accum, curVal) => {\r\n  //         let { price, quantity } = curVal;\r\n\r\n  //         let updatedTotalAmount = price * quantity;\r\n  //         accum.totalAmount += updatedTotalAmount;\r\n\r\n  //         accum.totalItem += quantity;\r\n  //         return accum;\r\n  //       },\r\n  //       {\r\n  //         totalItem: 0,\r\n  //         totalAmount: 0,\r\n  //       }\r\n  //     );\r\n  //     return { ...state, totalItem, totalAmount };\r\n  //   }\r\n  return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}